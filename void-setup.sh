#!/bin/bash
# Please read the full documentation at www.somewebsite.net/void
# Change the KEY and DEVICE
KEY=some-key.data
DEVICE=/dev/nvme0n1p4
EFI=/dev/nvme0n1p1

# Leave this unchanged for glibc and x86_64. Make sure to get the correct mirror if changing.
# More mirrors: https://docs.voidlinux.org/xbps/repositories/mirrors/index.html
REPO=https://repo-default.voidlinux.org/current
ARCH=x86_64

# Change locales in chroot section if needed (e.g., time zone ).

# opinionated btrfs options
BTRFS_OPTS="defaults,noatime,compress=zstd,space_cache=v2,ssd,discard=async"

green=$(tput setaf 2)
red=$(tput setaf 1)
yellow=$(tput setaf 3)
no=$(tput sgr0)


main(){
case $1 in
  all) rmmod pcspkr ; crypt_setup ; btrfs_setup ; base_install ; locales ; chroot_dev
    ;;
    fstab-gen|fstab) fstab-gen
    ;;
    mount) crypt_mount
    ;;
    *)
        print_help
    ;;
esac
}

crypt_setup(){
  test ! -f "$KEY" && echo -e  "${red}$KEY does not exist.${no}" && exit 1
  cryptsetup luksFormat "$DEVICE"
  cryptsetup luksAddKey "$DEVICE" "$KEY"
}

crypt_mount(){
# Open and mount an encrypted partition
  if test -f "$KEY";then
    cryptsetup open "$DEVICE" btrfs --key-file "$KEY"
  else  
    cryptsetup open "$DEVICE" btrfs
  fi
   # Mount the '/' subvolume named @void, it will contain home, tmp, root...
  mount -o subvol=@void,$BTRFS_OPTS /dev/mapper/btrfs /mnt
  
  # Mount subvolumes on @void mounted on /mnt
  for subv in cloud data home root opt srv ;do
      mkdir -p /mnt/$subv
      mount -o subvol=@$subv,$BTRFS_OPTS /dev/mapper/btrfs /mnt/$subv
  done

  # Mount nested subvolumes in var: @vlog on /var/log etc..
  for subv in log cache tmp ; do
      mkdir -p /mnt/var/$subv
      mount -o subvol=@v${subv},$BTRFS_OPTS /dev/mapper/btrfs /mnt/var/$subv
  done
  mkdir -p /mnt/usr/local
  mount -o subvol=@usrl,$BTRFS_OPTS /dev/mapper/btrfs /mnt/usr/local

  # EFI
  mkdir -p /mnt/boot
  mount $EFI /mnt/boot
}

btrfs_setup(){
  # For ext4 use  mkfs.ext4 -F /dev/mapper/XXXX
  mkfs.btrfs --label btrfs /dev/mapper/btrfs
  mount -o "$BTRFS_OPTS" /dev/mapper/btrfs /mnt

  echo -e "${yellow}Creating subvolumes.${no}"
  read
  # Create subvolumes.
  # NOTE: The nested subvolumes are created at the top but mounted nested on @void (e.g., @usrl /usr/local )
  #       tmp is not created, it is added automatically on fstab as tmfs /tmp later.
  for subv in void cloud data home root opt srv usrl vlog vcache vtmp ; do
      btrfs subvolume create /mnt/@$subv
  done
  umount -R /mnt
  crypt_mount
  echo -e "\n${green}Btrfs created and mounted. EFI is mounted.${no}\n"
}

base_install(){
echo -e "${yellow}Installing base-system...${no}"
read
# REPO and ARCH varaibles are set on top
mkdir -p /mnt/var/db/xbps/keys
cp /var/db/xbps/keys/* /mnt/var/db/xbps/keys/
XBPS_ARCH=$ARCH xbps-install -S -r /mnt -R "$REPO" base-system curl nvim
}

locales(){
echo -e "${yellow}Creating locales files...${no}"
read
# hostname
echo "void" >/mnt/etc/hostname

# rc.conf
echo "## Generated by my setup script" >>/mnt/etc/rc.conf
echo "HARDWARECLOCK=\"UTC\"" >>/mnt/etc/rc.conf
echo "TIMEZONE=\"US/Central\"" >>/mnt/etc/rc.conf
echo "KEYMAP=\"en\"" >>/mnt/etc/rc.conf
echo "FONT=\"ter-v22n\"" >>/mnt/etc/rc.conf

# libc-locales
echo "en_US.UTF-8 UTF-8" >>/mnt/etc/default/libc-locales
xbps-reconfigure -f glibc-locales


echo -e "${yellow}Echo enter chroot now with xchroot /mnt /bin/bash...${no}"
echo -e "${yellow}Download the script with curl https://raw.githubusercontent.com/rickalex21/void/master/void-setup.sh -o void-setup.sh ${no}"
}

chroot_dev(){
# Chroot
xchroot /mnt /bin/bash

echo "Changing password for root:"
passwd
cp /proc/mounts /etc/fstab
}

fstab-gen(){
  # Note: You have to be in chroot
  BTRFS_UUID=$(blkid -s UUID -o value /dev/mapper/btrfs)
  cat /proc/mounts | grep -E "subvolid|boot|tmpfs" | grep -v cgroup | sed "s@/dev/mapper/btrfs@UUID=$BTRFS_UUID@g" >/etc/fstab
  echo -e "${yellow}Created fstab, check it.${no}"
}

print_help(){
    printf "
    USAGE: %s all

    all   -   Runs all the steps.
    mount -  Opens and mounts the encrypted partition at $DEVICE and all subvolumes on /mnt
    \n" "$0"
}
main "$@"
